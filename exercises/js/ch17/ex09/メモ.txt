TypeScript
Microsoftが開発したプログラミング言語
JavaScriptのすべての機能に加えて静的型付けの機能を持つ

Flow
Facebook(Meta)が開発した静的型付けチェッカー

ーーーーー
TypeScriptの方はTaskManagerでジェネリクスを使っているが、FlowはTaskManagerでジェネリクスを使っていない。
なぜならcallerでTypeScriptの方はnew TaskManagerでジェネリクスを使っているが、Flowはnew TaskManagerでジェネリクスを使っていないから。

ーーーー
TypeScriptの方
task.tsにおける問題は型を記入すること。
型記入前のコードと比較しなければ変化が分かりにくいと思う


実行方法
①
tsc(TypeScriptのコードをJavaScriptにコンパイルする)用の設定値を持つtsconfig.jsonを作成する
commonjs形式のJavaScriptを出力する設定値を書く。

②
「tsc caller.ts」を実行してTypeScriptのコードをJavaScriptにコンパイルする
実行したディレクトリにtask.jsとcaller.jsが生成される

③
package.jsonの設定値をcommonjsにする
（ex09にpackage.jsonをコピーした。ex08まではEX Moduleで実装している）

④
「node caller.js」をして結果を確認する

ーーーー
Flowの方
①Flowのインストール
「npm install --save-dev flow-bin」

②Flowの設定ファイルを作成する
「npx flow init」

③
Babelのインストール
「npm install --save-dev @babel/core @babel/cli @babel/preset-flow @babel/node」

.babelrcファイルの作成

④コードの修正

⑤
Flowの実行
「npx flow」

⑥
Babelを使用してFlowの型記述を除去したコードを実行
「npx babel-node caller.js」
